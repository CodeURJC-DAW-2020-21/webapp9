openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/otherUser:
    put:
      tags:
      - user-rest-controller
      operationId: editUser
      parameters:
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: lastName
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIuser'
  /api/otherPasword:
    put:
      tags:
      - user-rest-controller
      operationId: editUserPassword
      parameters:
      - name: password
        in: query
        required: true
        schema:
          type: string
      - name: newPassword
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIuser'
  /api/otherEvent:
    put:
      tags:
      - event-rest-controller
      operationId: editEvent
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: description
        in: query
        required: false
        schema:
          type: string
      - name: date
        in: query
        required: false
        schema:
          type: string
      - name: capacity
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIevent'
  /api/newUser:
    post:
      tags:
      - user-rest-controller
      operationId: createUser
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: lastName
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      - name: email
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/newEvent:
    post:
      tags:
      - event-rest-controller
      operationId: createEvent
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: description
        in: query
        required: true
        schema:
          type: string
      - name: date
        in: query
        required: true
        schema:
          type: string
      - name: capacity
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: labels
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIevent'
  /api/newReservate:
    get:
      tags:
      - reservation-rest-controller
      operationId: reservateTable
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: string
      - name: day
        in: query
        required: true
        schema:
          type: string
      - name: hour
        in: query
        required: true
        schema:
          type: string
      - name: email
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIreservation'
  /api/myReservates:
    get:
      tags:
      - reservation-rest-controller
      operationId: reservations
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIreservations'
  /api/logout:
    get:
      tags:
      - user-rest-controller
      operationId: login
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIuser'
  /api/login:
    get:
      tags:
      - user-rest-controller
      operationId: login_1
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIuser'
  /api/like:
    get:
      tags:
      - event-rest-controller
      operationId: like
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/image:
    get:
      tags:
      - user-rest-controller
      operationId: setImage
      parameters:
      - name: image
        in: query
        required: true
        schema:
          type: string
          format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/events:
    get:
      tags:
      - event-rest-controller
      operationId: all
      parameters:
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIevents'
  /api/event:
    get:
      tags:
      - event-rest-controller
      operationId: getEvent
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIevent'
  /api/eventData:
    get:
      tags:
      - event-rest-controller
      operationId: getEventData
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIeventDATA'
  /api/User:
    get:
      tags:
      - user-rest-controller
      operationId: getUser
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIuser'
  /api/byeEvent:
    delete:
      tags:
      - event-rest-controller
      operationId: deleteEvent
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIevent'
components:
  schemas:
    APIuser:
      type: object
      properties:
        name:
          type: string
        lastName:
          type: string
        email:
          type: string
        eventsLikeIt:
          type: array
          items:
            type: integer
            format: int64
        referencedCodes:
          type: array
          items:
            type: string
        roles:
          type: array
          items:
            type: string
    APIevent:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
        likes:
          type: integer
          format: int32
        lavels:
          type: array
          items:
            type: string
        capacity:
          type: integer
          format: int32
    APIreservation:
      type: object
      properties:
        idTable:
          type: integer
          format: int64
        referencedCode:
          type: string
        hour:
          type: integer
          format: int32
    APIreservations:
      type: object
      properties:
        id:
          type: integer
          format: int64
        referencedCode:
          type: string
    APIevents:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
    APIeventDATA:
      type: object
      properties:
        name:
          type: string
        ocupation:
          type: integer
          format: int32
        capacity:
          type: integer
          format: int32
