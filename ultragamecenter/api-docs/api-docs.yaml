---
swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8443
basePath: "/"
tags:
- name: event-rest-controller
  description: Event Rest Controller
- name: login-rest-controller
  description: Login Rest Controller
- name: reservation-rest-controller
  description: Reservation Rest Controller
- name: user-rest-controller
  description: User Rest Controller
paths:
  "/api/auth/login":
    post:
      tags:
      - login-rest-controller
      summary: login
      operationId: loginUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - in: body
        name: accessToken
        description: accessToken
        required: false
        schema:
          type: string
      - in: body
        name: loginRequest
        description: loginRequest
        required: true
        schema:
          "$ref": "#/definitions/LoginRequest"
      - in: body
        name: refreshToken
        description: refreshToken
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/AuthResponse"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/auth/logout":
    post:
      tags:
      - login-rest-controller
      summary: logOut
      operationId: logOutUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/AuthResponse"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/auth/refresh":
    post:
      tags:
      - login-rest-controller
      summary: refreshToken
      operationId: refreshTokenUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - in: body
        name: refreshToken
        description: refreshToken
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/AuthResponse"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/event/":
    get:
      tags:
      - event-rest-controller
      summary: getEvents
      operationId: getEventsUsingGET
      produces:
      - "*/*"
      parameters:
      - name: page
        in: query
        description: page
        required: true
        type: integer
        format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Event"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
      - event-rest-controller
      summary: createEvent
      operationId: createEventUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - in: body
        name: event
        description: event
        required: true
        schema:
          "$ref": "#/definitions/EventDTO"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Event"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/event/DATA/{id}":
    get:
      tags:
      - event-rest-controller
      summary: getEventData
      operationId: getEventDataUsingGET
      produces:
      - "*/*"
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/event/{id}":
    get:
      tags:
      - event-rest-controller
      summary: getEvent
      operationId: getEventUsingGET
      produces:
      - "*/*"
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Event"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
      - event-rest-controller
      summary: editEvent
      operationId: editEventUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: newEvent
        description: newEvent
        required: true
        schema:
          "$ref": "#/definitions/EventDTO"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Event"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
      - event-rest-controller
      summary: deleteEvent
      operationId: deleteEventUsingDELETE
      produces:
      - "*/*"
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Event"
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  "/api/event/{id}/like":
    post:
      tags:
      - event-rest-controller
      summary: like
      operationId: likeUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/reservate/":
    post:
      tags:
      - reservation-rest-controller
      summary: reservateTable
      operationId: reservateTableUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - in: body
        name: tableRequest
        description: tableRequest
        required: true
        schema:
          "$ref": "#/definitions/ReservateTableRequest"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/TableReservation"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/user/":
    post:
      tags:
      - user-rest-controller
      summary: createUser
      operationId: createUserUsingPOST
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: u
        in: path
        description: u
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/User"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
      - user-rest-controller
      summary: editUser
      operationId: editUserUsingPUT
      consumes:
      - application/json
      produces:
      - "*/*"
      parameters:
      - name: editedUser
        in: path
        description: editedUser
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/User"
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/user/image":
    get:
      tags:
      - user-rest-controller
      summary: downloadImage
      operationId: downloadImageUsingGET
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
      - user-rest-controller
      summary: uploadImage
      operationId: uploadImageUsingPOST
      consumes:
      - multipart/form-data
      produces:
      - "*/*"
      parameters:
      - name: imageFile
        in: formData
        description: imageFile
        required: true
        type: file
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/user/likedEvents":
    get:
      tags:
      - user-rest-controller
      summary: getRecomendatedEvents
      operationId: getRecomendatedEventsUsingGET
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Event"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/user/me":
    get:
      tags:
      - user-rest-controller
      summary: me
      operationId: meUsingGET
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/User"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/user/myReservates":
    get:
      tags:
      - user-rest-controller
      summary: reservations
      operationId: reservationsUsingGET
      produces:
      - "*/*"
      parameters:
      - name: page
        in: query
        description: page
        required: true
        type: integer
        format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  "/api/user/recomendatedEvents":
    get:
      tags:
      - user-rest-controller
      summary: getLikedEvents
      operationId: getLikedEventsUsingGET
      produces:
      - "*/*"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Event"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
definitions:
  AuthResponse:
    type: object
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: string
        enum:
        - SUCCESS
        - FAILURE
    title: AuthResponse
  Event:
    type: object
    properties:
      capacity:
        type: integer
        format: int32
      date:
        type: string
        format: date
      description:
        type: string
      id:
        type: integer
        format: int64
      likes:
        type: integer
        format: int32
      name:
        type: string
    title: Event
  EventDTO:
    type: object
    properties:
      bannerUrl:
        type: file
      capacity:
        type: integer
        format: int32
      date:
        type: string
        format: date
      description:
        type: string
      gallery:
        type: array
        items:
          type: file
      lavels:
        type: array
        items:
          type: string
      name:
        type: string
    title: EventDTO
  File:
    type: object
    properties:
      absolute:
        type: boolean
      absoluteFile:
        "$ref": "#/definitions/File"
      absolutePath:
        type: string
      canonicalFile:
        "$ref": "#/definitions/File"
      canonicalPath:
        type: string
      directory:
        type: boolean
      executable:
        type: boolean
      file:
        type: boolean
      freeSpace:
        type: integer
        format: int64
      hidden:
        type: boolean
      lastModified:
        type: integer
        format: int64
      name:
        type: string
      parent:
        type: string
      parentFile:
        "$ref": "#/definitions/File"
      path:
        type: string
      readable:
        type: boolean
      totalSpace:
        type: integer
        format: int64
      usableSpace:
        type: integer
        format: int64
      writable:
        type: boolean
    title: File
  InputStream:
    type: object
    title: InputStream
  LoginRequest:
    type: object
    properties:
      password:
        type: string
      username:
        type: string
    title: LoginRequest
  ReservateTableRequest:
    type: object
    properties:
      day:
        type: string
      email:
        type: string
      hour:
        type: integer
        format: int32
      type:
        type: string
    title: ReservateTableRequest
  Resource:
    type: object
    properties:
      description:
        type: string
      file:
        "$ref": "#/definitions/File"
      filename:
        type: string
      inputStream:
        "$ref": "#/definitions/InputStream"
      open:
        type: boolean
      readable:
        type: boolean
      uri:
        "$ref": "#/definitions/URI"
      url:
        "$ref": "#/definitions/URL"
    title: Resource
  TableReservation:
    type: object
    properties:
      id:
        type: integer
        format: int64
      referencedCode:
        type: string
    title: TableReservation
  URI:
    type: object
    properties:
      absolute:
        type: boolean
      authority:
        type: string
      fragment:
        type: string
      host:
        type: string
      opaque:
        type: boolean
      path:
        type: string
      port:
        type: integer
        format: int32
      query:
        type: string
      rawAuthority:
        type: string
      rawFragment:
        type: string
      rawPath:
        type: string
      rawQuery:
        type: string
      rawSchemeSpecificPart:
        type: string
      rawUserInfo:
        type: string
      scheme:
        type: string
      schemeSpecificPart:
        type: string
      userInfo:
        type: string
    title: URI
  URL:
    type: object
    properties:
      authority:
        type: string
      content:
        type: object
      defaultPort:
        type: integer
        format: int32
      deserializedFields:
        "$ref": "#/definitions/URLStreamHandler"
      file:
        type: string
      host:
        type: string
      path:
        type: string
      port:
        type: integer
        format: int32
      protocol:
        type: string
      query:
        type: string
      ref:
        type: string
      serializedHashCode:
        type: integer
        format: int32
      userInfo:
        type: string
    title: URL
  URLStreamHandler:
    type: object
    title: URLStreamHandler
  User:
    type: object
    properties:
      email:
        type: string
      lastName:
        type: string
      name:
        type: string
      roles:
        type: array
        items:
          type: string
    title: User
